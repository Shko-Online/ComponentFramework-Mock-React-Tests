// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BreadCrumb renders 1`] = `
<ReactResizeObserver
  componentFrameworkMockGeneratorReact={
    ComponentFrameworkMockGeneratorReact {
      "context": ContextMock {
        "client": ClientMock {
          "disableScroll": false,
          "getClient": [Function],
          "getFormFactor": [Function],
          "isOffline": [Function],
        },
        "device": DeviceMock {
          "captureAudio": [Function],
          "captureImage": [Function],
          "captureVideo": [Function],
          "getBarcodeValue": [Function],
          "getCurrentPosition": [Function],
          "pickFile": [Function],
        },
        "factory": FactoryMock {
          "getPopupService": [Function],
          "popupService": PopupServiceMock {
            "closePopup": [Function],
            "createPopup": [Function],
            "deletePopup": [Function],
            "getPopupsId": [Function],
            "openPopup": [Function],
            "setPopupsId": [Function],
            "updatePopup": [Function],
          },
          "requestRender": [Function],
        },
        "formatting": FormattingMock {
          "formatCurrency": [Function],
          "formatDateAsFilterStringInUTC": [Function],
          "formatDateLong": [Function],
          "formatDateLongAbbreviated": [Function],
          "formatDateShort": [Function],
          "formatDateYearMonth": [Function],
          "formatDecimal": [Function],
          "formatInteger": [Function],
          "formatLanguage": [Function],
          "formatTime": [Function],
          "getWeekOfYear": [Function],
          "locale": "en-US",
        },
        "mode": ModeMock {
          "setControlState": [Function],
          "setFullScreen": [Function],
          "trackContainerResize": [Function],
        },
        "navigation": NavigationMock {
          "openAlertDialog": [Function],
          "openConfirmDialog": [Function],
          "openErrorDialog": [Function],
          "openFile": [Function],
          "openForm": [Function],
          "openUrl": [Function],
          "openWebResource": [Function],
        },
        "parameters": {
          "AccessibilityLabel": StringPropertyMock {
            "attributes": StringMetadataMock {},
            "raw": undefined,
            "setValue": [Function],
          },
          "InputEvent": StringPropertyMock {
            "attributes": StringMetadataMock {},
            "raw": undefined,
            "setValue": [Function],
          },
          "MaxDisplayedItems": WholeNumberPropertyMock {
            "raw": undefined,
            "setValue": [Function],
          },
          "OverflowIndex": WholeNumberPropertyMock {
            "raw": undefined,
            "setValue": [Function],
          },
          "Theme": StringPropertyMock {
            "attributes": StringMetadataMock {},
            "raw": undefined,
            "setValue": [Function],
          },
          "items": DataSetMock {
            "addColumn": [Function],
            "clearSelectedRecordIds": [Function],
            "columns": [],
            "filtering": FilteringMock {
              "clearFilter": [Function],
              "getFilter": [Function],
              "setFilter": [Function],
            },
            "getSelectedRecordIds": [Function],
            "getTargetEntityType": [Function],
            "getTitle": [Function],
            "getViewId": [Function],
            "initRecords": [Function],
            "loading": false,
            "openDatasetItem": [Function],
            "paging": PagingMock {
              "firstPageNumber": 1,
              "hasNextPage": false,
              "hasPreviousPage": false,
              "lastPageNumber": 1,
              "loadExactPage": [Function],
              "loadNextPage": [Function],
              "loadOnlyNewPage": true,
              "loadPreviousPage": [Function],
              "pageSize": 10,
              "reset": [Function],
              "setPageSize": [Function],
              "totalResultCount": -1,
            },
            "records": {},
            "refresh": [Function],
            "setSelectedRecordIds": [Function],
            "sortedRecordIds": [],
            "sorting": [],
          },
        },
        "resources": ResourcesMock {
          "getResource": [Function],
          "getString": [Function],
        },
        "updatedProperties": [],
        "userSettings": UserSettingsMock {
          "dateFormattingInfo": {
            "abbreviatedDayNames": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat",
            ],
            "abbreviatedMonthGenitiveNames": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
              "",
            ],
            "abbreviatedMonthNames": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
              "",
            ],
            "amDesignator": "AM",
            "calendar": {
              "algorithmType": 1,
              "calendarType": 1,
              "maxSupportedDateTime": undefined,
              "minSupportedDateTime": undefined,
              "twoDigitYearMax": 2029,
            },
            "calendarWeekRule": 0,
            "dateSeparator": "/",
            "dayNames": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
            ],
            "firstDayOfWeek": 0,
            "fullDateTimePattern": "dddd, MMMM d, yyyy h:mm:ss tt",
            "longDatePattern": "dddd, MMMM d, yyyy",
            "longTimePattern": "hh:mm:ss tt",
            "monthDayPattern": "MMMM dd",
            "monthGenitiveNames": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
              "",
            ],
            "monthNames": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
              "",
            ],
            "pmDesignator": "PM",
            "shortDatePattern": "M/d/yyyy",
            "shortTimePattern": "h:mm tt",
            "shortestDayNames": [
              "Su",
              "Mo",
              "Tu",
              "We",
              "Th",
              "Fr",
              "Sa",
            ],
            "sortableDateTimePattern": "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
            "timeSeparator": ":",
            "universalSortableDateTimePattern": "yyyy'-'MM'-'dd HH':'mm':'ss'Z'",
            "yearMonthPattern": "MMMM yyyy",
          },
          "getTimeZoneOffsetMinutes": [Function],
          "numberFormattingInfo": {
            "currencyDecimalDigits": 5,
            "currencyDecimalSeparator": ".",
            "currencyGroupSeparator": ",",
            "currencyGroupSizes": [
              3,
            ],
            "currencyNegativePattern": 0,
            "currencyPositivePattern": 0,
            "currencySymbol": undefined,
            "nanSymbol": "NaN",
            "nativeDigits": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
            ],
            "negativeInfinitySymbol": "-Infinity",
            "negativeSign": "-",
            "numberDecimalDigits": 2,
            "numberDecimalSeparator": ".",
            "numberGroupSeparator": ",",
            "numberGroupSizes": [
              3,
            ],
            "numberNegativePattern": 1,
            "perMilleSymbol": "",
            "percentDecimalDigits": 2,
            "percentDecimalSeparator": ".",
            "percentGroupSeparator": ",",
            "percentGroupSizes": [
              3,
            ],
            "percentNegativePattern": 0,
            "percentPositivePattern": 0,
            "percentSymbol": "%",
            "positiveInfinitySymbol": "Infinity",
            "positiveSign": "+",
          },
          "userId": undefined,
          "userName": "Betim Beja",
        },
        "utils": UtilityMock {
          "getEntityMetadata": [Function],
          "hasEntityPrivilege": [Function],
          "lookupObjects": [Function],
        },
        "webAPI": WebApiMock {
          "createRecord": [Function],
          "deleteRecord": [Function],
          "retrieveMultipleRecords": [Function],
          "retrieveRecord": [Function],
          "updateRecord": [Function],
        },
      },
      "control": Breadcrumb {
        "context": ContextMock {
          "client": ClientMock {
            "disableScroll": false,
            "getClient": [Function],
            "getFormFactor": [Function],
            "isOffline": [Function],
          },
          "device": DeviceMock {
            "captureAudio": [Function],
            "captureImage": [Function],
            "captureVideo": [Function],
            "getBarcodeValue": [Function],
            "getCurrentPosition": [Function],
            "pickFile": [Function],
          },
          "factory": FactoryMock {
            "getPopupService": [Function],
            "popupService": PopupServiceMock {
              "closePopup": [Function],
              "createPopup": [Function],
              "deletePopup": [Function],
              "getPopupsId": [Function],
              "openPopup": [Function],
              "setPopupsId": [Function],
              "updatePopup": [Function],
            },
            "requestRender": [Function],
          },
          "formatting": FormattingMock {
            "formatCurrency": [Function],
            "formatDateAsFilterStringInUTC": [Function],
            "formatDateLong": [Function],
            "formatDateLongAbbreviated": [Function],
            "formatDateShort": [Function],
            "formatDateYearMonth": [Function],
            "formatDecimal": [Function],
            "formatInteger": [Function],
            "formatLanguage": [Function],
            "formatTime": [Function],
            "getWeekOfYear": [Function],
            "locale": "en-US",
          },
          "mode": ModeMock {
            "setControlState": [Function],
            "setFullScreen": [Function],
            "trackContainerResize": [Function],
          },
          "navigation": NavigationMock {
            "openAlertDialog": [Function],
            "openConfirmDialog": [Function],
            "openErrorDialog": [Function],
            "openFile": [Function],
            "openForm": [Function],
            "openUrl": [Function],
            "openWebResource": [Function],
          },
          "parameters": {
            "AccessibilityLabel": StringPropertyMock {
              "attributes": StringMetadataMock {},
              "raw": undefined,
              "setValue": [Function],
            },
            "InputEvent": StringPropertyMock {
              "attributes": StringMetadataMock {},
              "raw": undefined,
              "setValue": [Function],
            },
            "MaxDisplayedItems": WholeNumberPropertyMock {
              "raw": undefined,
              "setValue": [Function],
            },
            "OverflowIndex": WholeNumberPropertyMock {
              "raw": undefined,
              "setValue": [Function],
            },
            "Theme": StringPropertyMock {
              "attributes": StringMetadataMock {},
              "raw": undefined,
              "setValue": [Function],
            },
            "items": DataSetMock {
              "addColumn": [Function],
              "clearSelectedRecordIds": [Function],
              "columns": [],
              "filtering": FilteringMock {
                "clearFilter": [Function],
                "getFilter": [Function],
                "setFilter": [Function],
              },
              "getSelectedRecordIds": [Function],
              "getTargetEntityType": [Function],
              "getTitle": [Function],
              "getViewId": [Function],
              "initRecords": [Function],
              "loading": false,
              "openDatasetItem": [Function],
              "paging": PagingMock {
                "firstPageNumber": 1,
                "hasNextPage": false,
                "hasPreviousPage": false,
                "lastPageNumber": 1,
                "loadExactPage": [Function],
                "loadNextPage": [Function],
                "loadOnlyNewPage": true,
                "loadPreviousPage": [Function],
                "pageSize": 10,
                "reset": [Function],
                "setPageSize": [Function],
                "totalResultCount": -1,
              },
              "records": {},
              "refresh": [Function],
              "setSelectedRecordIds": [Function],
              "sortedRecordIds": [],
              "sorting": [],
            },
          },
          "resources": ResourcesMock {
            "getResource": [Function],
            "getString": [Function],
          },
          "updatedProperties": [],
          "userSettings": UserSettingsMock {
            "dateFormattingInfo": {
              "abbreviatedDayNames": [
                "Sun",
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat",
              ],
              "abbreviatedMonthGenitiveNames": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "",
              ],
              "abbreviatedMonthNames": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "",
              ],
              "amDesignator": "AM",
              "calendar": {
                "algorithmType": 1,
                "calendarType": 1,
                "maxSupportedDateTime": undefined,
                "minSupportedDateTime": undefined,
                "twoDigitYearMax": 2029,
              },
              "calendarWeekRule": 0,
              "dateSeparator": "/",
              "dayNames": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ],
              "firstDayOfWeek": 0,
              "fullDateTimePattern": "dddd, MMMM d, yyyy h:mm:ss tt",
              "longDatePattern": "dddd, MMMM d, yyyy",
              "longTimePattern": "hh:mm:ss tt",
              "monthDayPattern": "MMMM dd",
              "monthGenitiveNames": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
                "",
              ],
              "monthNames": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
                "",
              ],
              "pmDesignator": "PM",
              "shortDatePattern": "M/d/yyyy",
              "shortTimePattern": "h:mm tt",
              "shortestDayNames": [
                "Su",
                "Mo",
                "Tu",
                "We",
                "Th",
                "Fr",
                "Sa",
              ],
              "sortableDateTimePattern": "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
              "timeSeparator": ":",
              "universalSortableDateTimePattern": "yyyy'-'MM'-'dd HH':'mm':'ss'Z'",
              "yearMonthPattern": "MMMM yyyy",
            },
            "getTimeZoneOffsetMinutes": [Function],
            "numberFormattingInfo": {
              "currencyDecimalDigits": 5,
              "currencyDecimalSeparator": ".",
              "currencyGroupSeparator": ",",
              "currencyGroupSizes": [
                3,
              ],
              "currencyNegativePattern": 0,
              "currencyPositivePattern": 0,
              "currencySymbol": undefined,
              "nanSymbol": "NaN",
              "nativeDigits": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
              ],
              "negativeInfinitySymbol": "-Infinity",
              "negativeSign": "-",
              "numberDecimalDigits": 2,
              "numberDecimalSeparator": ".",
              "numberGroupSeparator": ",",
              "numberGroupSizes": [
                3,
              ],
              "numberNegativePattern": 1,
              "perMilleSymbol": "",
              "percentDecimalDigits": 2,
              "percentDecimalSeparator": ".",
              "percentGroupSeparator": ",",
              "percentGroupSizes": [
                3,
              ],
              "percentNegativePattern": 0,
              "percentPositivePattern": 0,
              "percentSymbol": "%",
              "positiveInfinitySymbol": "Infinity",
              "positiveSign": "+",
            },
            "userId": undefined,
            "userName": "Betim Beja",
          },
          "utils": UtilityMock {
            "getEntityMetadata": [Function],
            "hasEntityPrivilege": [Function],
            "lookupObjects": [Function],
          },
          "webAPI": WebApiMock {
            "createRecord": [Function],
            "deleteRecord": [Function],
            "retrieveMultipleRecords": [Function],
            "retrieveRecord": [Function],
            "updateRecord": [Function],
          },
        },
        "focusKey": "",
        "onSelect": [Function],
      },
      "data": {
        "systemuser": {
          "undefined": EntityRecord {
            "columns": {},
            "etn": "systemuser",
            "getFormattedValue": [Function],
            "getNamedReference": [Function],
            "getRecordId": [Function],
            "getValue": [Function],
            "id": {
              "guid": undefined,
            },
            "name": "Betim Beja",
          },
        },
      },
      "metadata": MetadataDB {
        "attributes": {},
        "data": {},
        "db": Loki {
          "ENV": "NODEJS",
          "autosave": false,
          "autosaveHandle": null,
          "autosaveInterval": 5000,
          "collections": [],
          "databaseVersion": 1.5,
          "engineVersion": 1.5,
          "events": {
            "changes": [],
            "close": [],
            "flushChanges": [],
            "init": [
              [Function],
            ],
            "loaded": [],
            "warning": [],
          },
          "filename": "metadata.db",
          "options": {
            "destructureDelimiter": "$<
",
            "serializationMethod": "normal",
          },
          "persistenceAdapter": LokiFsAdapter {
            "fs": {
              "Dir": [Function],
              "Dirent": [Function],
              "F_OK": 0,
              "FileReadStream": [Function],
              "FileWriteStream": [Function],
              "R_OK": 4,
              "ReadStream": [Function],
              "Stats": [Function],
              "W_OK": 2,
              "WriteStream": [Function],
              "X_OK": 1,
              "_toUnixTimestamp": [Function],
              "access": [Function],
              "accessSync": [Function],
              "appendFile": [Function],
              "appendFileSync": [Function],
              "chmod": [Function],
              "chmodSync": [Function],
              "chown": [Function],
              "chownSync": [Function],
              "close": [Function],
              "closeSync": [Function],
              "constants": {
                "COPYFILE_EXCL": 1,
                "COPYFILE_FICLONE": 2,
                "COPYFILE_FICLONE_FORCE": 4,
                "F_OK": 0,
                "O_APPEND": 8,
                "O_CREAT": 256,
                "O_EXCL": 1024,
                "O_RDONLY": 0,
                "O_RDWR": 2,
                "O_TRUNC": 512,
                "O_WRONLY": 1,
                "R_OK": 4,
                "S_IFCHR": 8192,
                "S_IFDIR": 16384,
                "S_IFLNK": 40960,
                "S_IFMT": 61440,
                "S_IFREG": 32768,
                "S_IRUSR": 256,
                "S_IWUSR": 128,
                "UV_DIRENT_BLOCK": 7,
                "UV_DIRENT_CHAR": 6,
                "UV_DIRENT_DIR": 2,
                "UV_DIRENT_FIFO": 4,
                "UV_DIRENT_FILE": 1,
                "UV_DIRENT_LINK": 3,
                "UV_DIRENT_SOCKET": 5,
                "UV_DIRENT_UNKNOWN": 0,
                "UV_FS_COPYFILE_EXCL": 1,
                "UV_FS_COPYFILE_FICLONE": 2,
                "UV_FS_COPYFILE_FICLONE_FORCE": 4,
                "UV_FS_O_FILEMAP": 536870912,
                "UV_FS_SYMLINK_DIR": 1,
                "UV_FS_SYMLINK_JUNCTION": 2,
                "W_OK": 2,
                "X_OK": 1,
              },
              "copyFile": [Function],
              "copyFileSync": [Function],
              "cp": [Function],
              "cpSync": [Function],
              "createReadStream": [Function],
              "createWriteStream": [Function],
              "exists": [Function],
              "existsSync": [Function],
              "fchmod": [Function],
              "fchmodSync": [Function],
              "fchown": [Function],
              "fchownSync": [Function],
              "fdatasync": [Function],
              "fdatasyncSync": [Function],
              "fstat": [Function],
              "fstatSync": [Function],
              "fsync": [Function],
              "fsyncSync": [Function],
              "ftruncate": [Function],
              "ftruncateSync": [Function],
              "futimes": [Function],
              "futimesSync": [Function],
              "lchmod": undefined,
              "lchmodSync": undefined,
              "lchown": [Function],
              "lchownSync": [Function],
              "link": [Function],
              "linkSync": [Function],
              "lstat": [Function],
              "lstatSync": [Function],
              "lutimes": [Function],
              "lutimesSync": [Function],
              "mkdir": [Function],
              "mkdirSync": [Function],
              "mkdtemp": [Function],
              "mkdtempSync": [Function],
              "open": [Function],
              "openSync": [Function],
              "opendir": [Function],
              "opendirSync": [Function],
              "promises": {
                "access": [Function],
                "appendFile": [Function],
                "chmod": [Function],
                "chown": [Function],
                "constants": {
                  "COPYFILE_EXCL": 1,
                  "COPYFILE_FICLONE": 2,
                  "COPYFILE_FICLONE_FORCE": 4,
                  "F_OK": 0,
                  "O_APPEND": 8,
                  "O_CREAT": 256,
                  "O_EXCL": 1024,
                  "O_RDONLY": 0,
                  "O_RDWR": 2,
                  "O_TRUNC": 512,
                  "O_WRONLY": 1,
                  "R_OK": 4,
                  "S_IFCHR": 8192,
                  "S_IFDIR": 16384,
                  "S_IFLNK": 40960,
                  "S_IFMT": 61440,
                  "S_IFREG": 32768,
                  "S_IRUSR": 256,
                  "S_IWUSR": 128,
                  "UV_DIRENT_BLOCK": 7,
                  "UV_DIRENT_CHAR": 6,
                  "UV_DIRENT_DIR": 2,
                  "UV_DIRENT_FIFO": 4,
                  "UV_DIRENT_FILE": 1,
                  "UV_DIRENT_LINK": 3,
                  "UV_DIRENT_SOCKET": 5,
                  "UV_DIRENT_UNKNOWN": 0,
                  "UV_FS_COPYFILE_EXCL": 1,
                  "UV_FS_COPYFILE_FICLONE": 2,
                  "UV_FS_COPYFILE_FICLONE_FORCE": 4,
                  "UV_FS_O_FILEMAP": 536870912,
                  "UV_FS_SYMLINK_DIR": 1,
                  "UV_FS_SYMLINK_JUNCTION": 2,
                  "W_OK": 2,
                  "X_OK": 1,
                },
                "copyFile": [Function],
                "cp": [Function],
                "lchmod": [Function],
                "lchown": [Function],
                "link": [Function],
                "lstat": [Function],
                "lutimes": [Function],
                "mkdir": [Function],
                "mkdtemp": [Function],
                "open": [Function],
                "opendir": [Function],
                "readFile": [Function],
                "readdir": [Function],
                "readlink": [Function],
                "realpath": [Function],
                "rename": [Function],
                "rm": [Function],
                "rmdir": [Function],
                "stat": [Function],
                "symlink": [Function],
                "truncate": [Function],
                "unlink": [Function],
                "utimes": [Function],
                "watch": [Function],
                "writeFile": [Function],
              },
              "read": [Function],
              "readFile": [Function],
              "readFileSync": [Function],
              "readSync": [Function],
              "readdir": [Function],
              "readdirSync": [Function],
              "readlink": [Function],
              "readlinkSync": [Function],
              "readv": [Function],
              "readvSync": [Function],
              "realpath": [Function],
              "realpathSync": [Function],
              "rename": [Function],
              "renameSync": [Function],
              "rm": [Function],
              "rmSync": [Function],
              "rmdir": [Function],
              "rmdirSync": [Function],
              "stat": [Function],
              "statSync": [Function],
              "symlink": [Function],
              "symlinkSync": [Function],
              "truncate": [Function],
              "truncateSync": [Function],
              "unlink": [Function],
              "unlinkSync": [Function],
              "unwatchFile": [Function],
              "utimes": [Function],
              "utimesSync": [Function],
              "watch": [Function],
              "watchFile": [Function],
              "write": [Function],
              "writeFile": [Function],
              "writeFileSync": [Function],
              "writeSync": [Function],
              "writev": [Function],
              "writevSync": [Function],
            },
          },
          "persistenceMethod": "fs",
          "throttledCallbacks": [],
          "throttledSavePending": false,
          "throttledSaves": true,
          "verbose": false,
        },
      },
      "notifyOutputChanged": [Function],
    }
  }
/>
`;

exports[`BreadCrumb renders dummy items when no items configured 1`] = `
<ReactResizeObserver
  componentFrameworkMockGeneratorReact={
    ComponentFrameworkMockGeneratorReact {
      "context": ContextMock {
        "client": ClientMock {
          "disableScroll": false,
          "getClient": [Function],
          "getFormFactor": [Function],
          "isOffline": [Function],
        },
        "device": DeviceMock {
          "captureAudio": [Function],
          "captureImage": [Function],
          "captureVideo": [Function],
          "getBarcodeValue": [Function],
          "getCurrentPosition": [Function],
          "pickFile": [Function],
        },
        "factory": FactoryMock {
          "getPopupService": [Function],
          "popupService": PopupServiceMock {
            "closePopup": [Function],
            "createPopup": [Function],
            "deletePopup": [Function],
            "getPopupsId": [Function],
            "openPopup": [Function],
            "setPopupsId": [Function],
            "updatePopup": [Function],
          },
          "requestRender": [Function],
        },
        "formatting": FormattingMock {
          "formatCurrency": [Function],
          "formatDateAsFilterStringInUTC": [Function],
          "formatDateLong": [Function],
          "formatDateLongAbbreviated": [Function],
          "formatDateShort": [Function],
          "formatDateYearMonth": [Function],
          "formatDecimal": [Function],
          "formatInteger": [Function],
          "formatLanguage": [Function],
          "formatTime": [Function],
          "getWeekOfYear": [Function],
          "locale": "en-US",
        },
        "mode": ModeMock {
          "setControlState": [Function],
          "setFullScreen": [Function],
          "trackContainerResize": [Function],
        },
        "navigation": NavigationMock {
          "openAlertDialog": [Function],
          "openConfirmDialog": [Function],
          "openErrorDialog": [Function],
          "openFile": [Function],
          "openForm": [Function],
          "openUrl": [Function],
          "openWebResource": [Function],
        },
        "parameters": {
          "AccessibilityLabel": StringPropertyMock {
            "attributes": StringMetadataMock {},
            "raw": undefined,
            "setValue": [Function],
          },
          "InputEvent": StringPropertyMock {
            "attributes": StringMetadataMock {},
            "raw": undefined,
            "setValue": [Function],
          },
          "MaxDisplayedItems": WholeNumberPropertyMock {
            "raw": undefined,
            "setValue": [Function],
          },
          "OverflowIndex": WholeNumberPropertyMock {
            "raw": undefined,
            "setValue": [Function],
          },
          "Theme": StringPropertyMock {
            "attributes": StringMetadataMock {},
            "raw": undefined,
            "setValue": [Function],
          },
          "items": DataSetMock {
            "addColumn": [Function],
            "clearSelectedRecordIds": [Function],
            "columns": [],
            "error": true,
            "filtering": FilteringMock {
              "clearFilter": [Function],
              "getFilter": [Function],
              "setFilter": [Function],
            },
            "getSelectedRecordIds": [Function],
            "getTargetEntityType": [Function],
            "getTitle": [Function],
            "getViewId": [Function],
            "initRecords": [Function],
            "loading": false,
            "openDatasetItem": [Function],
            "paging": PagingMock {
              "firstPageNumber": 1,
              "hasNextPage": false,
              "hasPreviousPage": false,
              "lastPageNumber": 1,
              "loadExactPage": [Function],
              "loadNextPage": [Function],
              "loadOnlyNewPage": true,
              "loadPreviousPage": [Function],
              "pageSize": 10,
              "reset": [Function],
              "setPageSize": [Function],
              "totalResultCount": -1,
            },
            "records": {},
            "refresh": [Function],
            "setSelectedRecordIds": [Function],
            "sortedRecordIds": [],
            "sorting": [],
          },
        },
        "resources": ResourcesMock {
          "getResource": [Function],
          "getString": [Function],
        },
        "updatedProperties": [],
        "userSettings": UserSettingsMock {
          "dateFormattingInfo": {
            "abbreviatedDayNames": [
              "Sun",
              "Mon",
              "Tue",
              "Wed",
              "Thu",
              "Fri",
              "Sat",
            ],
            "abbreviatedMonthGenitiveNames": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
              "",
            ],
            "abbreviatedMonthNames": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
              "",
            ],
            "amDesignator": "AM",
            "calendar": {
              "algorithmType": 1,
              "calendarType": 1,
              "maxSupportedDateTime": undefined,
              "minSupportedDateTime": undefined,
              "twoDigitYearMax": 2029,
            },
            "calendarWeekRule": 0,
            "dateSeparator": "/",
            "dayNames": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
            ],
            "firstDayOfWeek": 0,
            "fullDateTimePattern": "dddd, MMMM d, yyyy h:mm:ss tt",
            "longDatePattern": "dddd, MMMM d, yyyy",
            "longTimePattern": "hh:mm:ss tt",
            "monthDayPattern": "MMMM dd",
            "monthGenitiveNames": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
              "",
            ],
            "monthNames": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
              "",
            ],
            "pmDesignator": "PM",
            "shortDatePattern": "M/d/yyyy",
            "shortTimePattern": "h:mm tt",
            "shortestDayNames": [
              "Su",
              "Mo",
              "Tu",
              "We",
              "Th",
              "Fr",
              "Sa",
            ],
            "sortableDateTimePattern": "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
            "timeSeparator": ":",
            "universalSortableDateTimePattern": "yyyy'-'MM'-'dd HH':'mm':'ss'Z'",
            "yearMonthPattern": "MMMM yyyy",
          },
          "getTimeZoneOffsetMinutes": [Function],
          "numberFormattingInfo": {
            "currencyDecimalDigits": 5,
            "currencyDecimalSeparator": ".",
            "currencyGroupSeparator": ",",
            "currencyGroupSizes": [
              3,
            ],
            "currencyNegativePattern": 0,
            "currencyPositivePattern": 0,
            "currencySymbol": undefined,
            "nanSymbol": "NaN",
            "nativeDigits": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
            ],
            "negativeInfinitySymbol": "-Infinity",
            "negativeSign": "-",
            "numberDecimalDigits": 2,
            "numberDecimalSeparator": ".",
            "numberGroupSeparator": ",",
            "numberGroupSizes": [
              3,
            ],
            "numberNegativePattern": 1,
            "perMilleSymbol": "",
            "percentDecimalDigits": 2,
            "percentDecimalSeparator": ".",
            "percentGroupSeparator": ",",
            "percentGroupSizes": [
              3,
            ],
            "percentNegativePattern": 0,
            "percentPositivePattern": 0,
            "percentSymbol": "%",
            "positiveInfinitySymbol": "Infinity",
            "positiveSign": "+",
          },
          "userId": undefined,
          "userName": "Betim Beja",
        },
        "utils": UtilityMock {
          "getEntityMetadata": [Function],
          "hasEntityPrivilege": [Function],
          "lookupObjects": [Function],
        },
        "webAPI": WebApiMock {
          "createRecord": [Function],
          "deleteRecord": [Function],
          "retrieveMultipleRecords": [Function],
          "retrieveRecord": [Function],
          "updateRecord": [Function],
        },
      },
      "control": Breadcrumb {
        "context": ContextMock {
          "client": ClientMock {
            "disableScroll": false,
            "getClient": [Function],
            "getFormFactor": [Function],
            "isOffline": [Function],
          },
          "device": DeviceMock {
            "captureAudio": [Function],
            "captureImage": [Function],
            "captureVideo": [Function],
            "getBarcodeValue": [Function],
            "getCurrentPosition": [Function],
            "pickFile": [Function],
          },
          "factory": FactoryMock {
            "getPopupService": [Function],
            "popupService": PopupServiceMock {
              "closePopup": [Function],
              "createPopup": [Function],
              "deletePopup": [Function],
              "getPopupsId": [Function],
              "openPopup": [Function],
              "setPopupsId": [Function],
              "updatePopup": [Function],
            },
            "requestRender": [Function],
          },
          "formatting": FormattingMock {
            "formatCurrency": [Function],
            "formatDateAsFilterStringInUTC": [Function],
            "formatDateLong": [Function],
            "formatDateLongAbbreviated": [Function],
            "formatDateShort": [Function],
            "formatDateYearMonth": [Function],
            "formatDecimal": [Function],
            "formatInteger": [Function],
            "formatLanguage": [Function],
            "formatTime": [Function],
            "getWeekOfYear": [Function],
            "locale": "en-US",
          },
          "mode": ModeMock {
            "setControlState": [Function],
            "setFullScreen": [Function],
            "trackContainerResize": [Function],
          },
          "navigation": NavigationMock {
            "openAlertDialog": [Function],
            "openConfirmDialog": [Function],
            "openErrorDialog": [Function],
            "openFile": [Function],
            "openForm": [Function],
            "openUrl": [Function],
            "openWebResource": [Function],
          },
          "parameters": {
            "AccessibilityLabel": StringPropertyMock {
              "attributes": StringMetadataMock {},
              "raw": undefined,
              "setValue": [Function],
            },
            "InputEvent": StringPropertyMock {
              "attributes": StringMetadataMock {},
              "raw": undefined,
              "setValue": [Function],
            },
            "MaxDisplayedItems": WholeNumberPropertyMock {
              "raw": undefined,
              "setValue": [Function],
            },
            "OverflowIndex": WholeNumberPropertyMock {
              "raw": undefined,
              "setValue": [Function],
            },
            "Theme": StringPropertyMock {
              "attributes": StringMetadataMock {},
              "raw": undefined,
              "setValue": [Function],
            },
            "items": DataSetMock {
              "addColumn": [Function],
              "clearSelectedRecordIds": [Function],
              "columns": [],
              "error": true,
              "filtering": FilteringMock {
                "clearFilter": [Function],
                "getFilter": [Function],
                "setFilter": [Function],
              },
              "getSelectedRecordIds": [Function],
              "getTargetEntityType": [Function],
              "getTitle": [Function],
              "getViewId": [Function],
              "initRecords": [Function],
              "loading": false,
              "openDatasetItem": [Function],
              "paging": PagingMock {
                "firstPageNumber": 1,
                "hasNextPage": false,
                "hasPreviousPage": false,
                "lastPageNumber": 1,
                "loadExactPage": [Function],
                "loadNextPage": [Function],
                "loadOnlyNewPage": true,
                "loadPreviousPage": [Function],
                "pageSize": 10,
                "reset": [Function],
                "setPageSize": [Function],
                "totalResultCount": -1,
              },
              "records": {},
              "refresh": [Function],
              "setSelectedRecordIds": [Function],
              "sortedRecordIds": [],
              "sorting": [],
            },
          },
          "resources": ResourcesMock {
            "getResource": [Function],
            "getString": [Function],
          },
          "updatedProperties": [],
          "userSettings": UserSettingsMock {
            "dateFormattingInfo": {
              "abbreviatedDayNames": [
                "Sun",
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat",
              ],
              "abbreviatedMonthGenitiveNames": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "",
              ],
              "abbreviatedMonthNames": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "",
              ],
              "amDesignator": "AM",
              "calendar": {
                "algorithmType": 1,
                "calendarType": 1,
                "maxSupportedDateTime": undefined,
                "minSupportedDateTime": undefined,
                "twoDigitYearMax": 2029,
              },
              "calendarWeekRule": 0,
              "dateSeparator": "/",
              "dayNames": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ],
              "firstDayOfWeek": 0,
              "fullDateTimePattern": "dddd, MMMM d, yyyy h:mm:ss tt",
              "longDatePattern": "dddd, MMMM d, yyyy",
              "longTimePattern": "hh:mm:ss tt",
              "monthDayPattern": "MMMM dd",
              "monthGenitiveNames": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
                "",
              ],
              "monthNames": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
                "",
              ],
              "pmDesignator": "PM",
              "shortDatePattern": "M/d/yyyy",
              "shortTimePattern": "h:mm tt",
              "shortestDayNames": [
                "Su",
                "Mo",
                "Tu",
                "We",
                "Th",
                "Fr",
                "Sa",
              ],
              "sortableDateTimePattern": "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
              "timeSeparator": ":",
              "universalSortableDateTimePattern": "yyyy'-'MM'-'dd HH':'mm':'ss'Z'",
              "yearMonthPattern": "MMMM yyyy",
            },
            "getTimeZoneOffsetMinutes": [Function],
            "numberFormattingInfo": {
              "currencyDecimalDigits": 5,
              "currencyDecimalSeparator": ".",
              "currencyGroupSeparator": ",",
              "currencyGroupSizes": [
                3,
              ],
              "currencyNegativePattern": 0,
              "currencyPositivePattern": 0,
              "currencySymbol": undefined,
              "nanSymbol": "NaN",
              "nativeDigits": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
              ],
              "negativeInfinitySymbol": "-Infinity",
              "negativeSign": "-",
              "numberDecimalDigits": 2,
              "numberDecimalSeparator": ".",
              "numberGroupSeparator": ",",
              "numberGroupSizes": [
                3,
              ],
              "numberNegativePattern": 1,
              "perMilleSymbol": "",
              "percentDecimalDigits": 2,
              "percentDecimalSeparator": ".",
              "percentGroupSeparator": ",",
              "percentGroupSizes": [
                3,
              ],
              "percentNegativePattern": 0,
              "percentPositivePattern": 0,
              "percentSymbol": "%",
              "positiveInfinitySymbol": "Infinity",
              "positiveSign": "+",
            },
            "userId": undefined,
            "userName": "Betim Beja",
          },
          "utils": UtilityMock {
            "getEntityMetadata": [Function],
            "hasEntityPrivilege": [Function],
            "lookupObjects": [Function],
          },
          "webAPI": WebApiMock {
            "createRecord": [Function],
            "deleteRecord": [Function],
            "retrieveMultipleRecords": [Function],
            "retrieveRecord": [Function],
            "updateRecord": [Function],
          },
        },
        "focusKey": "",
        "onSelect": [Function],
      },
      "data": {
        "systemuser": {
          "undefined": EntityRecord {
            "columns": {},
            "etn": "systemuser",
            "getFormattedValue": [Function],
            "getNamedReference": [Function],
            "getRecordId": [Function],
            "getValue": [Function],
            "id": {
              "guid": undefined,
            },
            "name": "Betim Beja",
          },
        },
      },
      "metadata": MetadataDB {
        "attributes": {},
        "data": {},
        "db": Loki {
          "ENV": "NODEJS",
          "autosave": false,
          "autosaveHandle": null,
          "autosaveInterval": 5000,
          "collections": [],
          "databaseVersion": 1.5,
          "engineVersion": 1.5,
          "events": {
            "changes": [],
            "close": [],
            "flushChanges": [],
            "init": [
              [Function],
            ],
            "loaded": [],
            "warning": [],
          },
          "filename": "metadata.db",
          "options": {
            "destructureDelimiter": "$<
",
            "serializationMethod": "normal",
          },
          "persistenceAdapter": LokiFsAdapter {
            "fs": {
              "Dir": [Function],
              "Dirent": [Function],
              "F_OK": 0,
              "FileReadStream": [Function],
              "FileWriteStream": [Function],
              "R_OK": 4,
              "ReadStream": [Function],
              "Stats": [Function],
              "W_OK": 2,
              "WriteStream": [Function],
              "X_OK": 1,
              "_toUnixTimestamp": [Function],
              "access": [Function],
              "accessSync": [Function],
              "appendFile": [Function],
              "appendFileSync": [Function],
              "chmod": [Function],
              "chmodSync": [Function],
              "chown": [Function],
              "chownSync": [Function],
              "close": [Function],
              "closeSync": [Function],
              "constants": {
                "COPYFILE_EXCL": 1,
                "COPYFILE_FICLONE": 2,
                "COPYFILE_FICLONE_FORCE": 4,
                "F_OK": 0,
                "O_APPEND": 8,
                "O_CREAT": 256,
                "O_EXCL": 1024,
                "O_RDONLY": 0,
                "O_RDWR": 2,
                "O_TRUNC": 512,
                "O_WRONLY": 1,
                "R_OK": 4,
                "S_IFCHR": 8192,
                "S_IFDIR": 16384,
                "S_IFLNK": 40960,
                "S_IFMT": 61440,
                "S_IFREG": 32768,
                "S_IRUSR": 256,
                "S_IWUSR": 128,
                "UV_DIRENT_BLOCK": 7,
                "UV_DIRENT_CHAR": 6,
                "UV_DIRENT_DIR": 2,
                "UV_DIRENT_FIFO": 4,
                "UV_DIRENT_FILE": 1,
                "UV_DIRENT_LINK": 3,
                "UV_DIRENT_SOCKET": 5,
                "UV_DIRENT_UNKNOWN": 0,
                "UV_FS_COPYFILE_EXCL": 1,
                "UV_FS_COPYFILE_FICLONE": 2,
                "UV_FS_COPYFILE_FICLONE_FORCE": 4,
                "UV_FS_O_FILEMAP": 536870912,
                "UV_FS_SYMLINK_DIR": 1,
                "UV_FS_SYMLINK_JUNCTION": 2,
                "W_OK": 2,
                "X_OK": 1,
              },
              "copyFile": [Function],
              "copyFileSync": [Function],
              "cp": [Function],
              "cpSync": [Function],
              "createReadStream": [Function],
              "createWriteStream": [Function],
              "exists": [Function],
              "existsSync": [Function],
              "fchmod": [Function],
              "fchmodSync": [Function],
              "fchown": [Function],
              "fchownSync": [Function],
              "fdatasync": [Function],
              "fdatasyncSync": [Function],
              "fstat": [Function],
              "fstatSync": [Function],
              "fsync": [Function],
              "fsyncSync": [Function],
              "ftruncate": [Function],
              "ftruncateSync": [Function],
              "futimes": [Function],
              "futimesSync": [Function],
              "lchmod": undefined,
              "lchmodSync": undefined,
              "lchown": [Function],
              "lchownSync": [Function],
              "link": [Function],
              "linkSync": [Function],
              "lstat": [Function],
              "lstatSync": [Function],
              "lutimes": [Function],
              "lutimesSync": [Function],
              "mkdir": [Function],
              "mkdirSync": [Function],
              "mkdtemp": [Function],
              "mkdtempSync": [Function],
              "open": [Function],
              "openSync": [Function],
              "opendir": [Function],
              "opendirSync": [Function],
              "promises": {
                "access": [Function],
                "appendFile": [Function],
                "chmod": [Function],
                "chown": [Function],
                "constants": {
                  "COPYFILE_EXCL": 1,
                  "COPYFILE_FICLONE": 2,
                  "COPYFILE_FICLONE_FORCE": 4,
                  "F_OK": 0,
                  "O_APPEND": 8,
                  "O_CREAT": 256,
                  "O_EXCL": 1024,
                  "O_RDONLY": 0,
                  "O_RDWR": 2,
                  "O_TRUNC": 512,
                  "O_WRONLY": 1,
                  "R_OK": 4,
                  "S_IFCHR": 8192,
                  "S_IFDIR": 16384,
                  "S_IFLNK": 40960,
                  "S_IFMT": 61440,
                  "S_IFREG": 32768,
                  "S_IRUSR": 256,
                  "S_IWUSR": 128,
                  "UV_DIRENT_BLOCK": 7,
                  "UV_DIRENT_CHAR": 6,
                  "UV_DIRENT_DIR": 2,
                  "UV_DIRENT_FIFO": 4,
                  "UV_DIRENT_FILE": 1,
                  "UV_DIRENT_LINK": 3,
                  "UV_DIRENT_SOCKET": 5,
                  "UV_DIRENT_UNKNOWN": 0,
                  "UV_FS_COPYFILE_EXCL": 1,
                  "UV_FS_COPYFILE_FICLONE": 2,
                  "UV_FS_COPYFILE_FICLONE_FORCE": 4,
                  "UV_FS_O_FILEMAP": 536870912,
                  "UV_FS_SYMLINK_DIR": 1,
                  "UV_FS_SYMLINK_JUNCTION": 2,
                  "W_OK": 2,
                  "X_OK": 1,
                },
                "copyFile": [Function],
                "cp": [Function],
                "lchmod": [Function],
                "lchown": [Function],
                "link": [Function],
                "lstat": [Function],
                "lutimes": [Function],
                "mkdir": [Function],
                "mkdtemp": [Function],
                "open": [Function],
                "opendir": [Function],
                "readFile": [Function],
                "readdir": [Function],
                "readlink": [Function],
                "realpath": [Function],
                "rename": [Function],
                "rm": [Function],
                "rmdir": [Function],
                "stat": [Function],
                "symlink": [Function],
                "truncate": [Function],
                "unlink": [Function],
                "utimes": [Function],
                "watch": [Function],
                "writeFile": [Function],
              },
              "read": [Function],
              "readFile": [Function],
              "readFileSync": [Function],
              "readSync": [Function],
              "readdir": [Function],
              "readdirSync": [Function],
              "readlink": [Function],
              "readlinkSync": [Function],
              "readv": [Function],
              "readvSync": [Function],
              "realpath": [Function],
              "realpathSync": [Function],
              "rename": [Function],
              "renameSync": [Function],
              "rm": [Function],
              "rmSync": [Function],
              "rmdir": [Function],
              "rmdirSync": [Function],
              "stat": [Function],
              "statSync": [Function],
              "symlink": [Function],
              "symlinkSync": [Function],
              "truncate": [Function],
              "truncateSync": [Function],
              "unlink": [Function],
              "unlinkSync": [Function],
              "unwatchFile": [Function],
              "utimes": [Function],
              "utimesSync": [Function],
              "watch": [Function],
              "watchFile": [Function],
              "write": [Function],
              "writeFile": [Function],
              "writeFileSync": [Function],
              "writeSync": [Function],
              "writev": [Function],
              "writevSync": [Function],
            },
          },
          "persistenceMethod": "fs",
          "throttledCallbacks": [],
          "throttledSavePending": false,
          "throttledSaves": true,
          "verbose": false,
        },
      },
      "notifyOutputChanged": [Function],
    }
  }
/>
`;
